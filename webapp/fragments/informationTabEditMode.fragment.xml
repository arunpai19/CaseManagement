<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:f="sap.ui.layout.form" xmlns:l="sap.ui.layout">
	<VBox>
	<f:SimpleForm editable="true" layout="ResponsiveGridLayout" title="CR N." labelSpanXL="4" labelSpanL="4"
		labelSpanM="7" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="3"
		columnsL="3" columnsM="3" singleContainerFullSize="false">
		<f:content>
			<CheckBox text="{i18n>fleetTxt}" enabled = "false" selected="true">
				<layoutData>
					<l:GridData span="XL4 L4 M12 S12" indentL="5"/>
				</layoutData>
			</CheckBox>
			<Label text="{i18n>subTypeText}">
				<layoutData>
					<l:GridData span="XL4 L4 M12 S12" indentL="1"/>
				</layoutData>
			</Label>
			<ComboBox change="setNull" required = "{path: 'dispControlModel>/SubType', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/SubType', formatter: '.formatter.displayControlEnable'}" selectedKey="{FieldDataModel>/SubType}" items="{path: 'dropDown>/SubType'}">
										<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
				<layoutData>
					<l:GridData span="XL4 L7 M5 S12"/>
				</layoutData>
			</ComboBox>
			<Label text="{i18n>categoryText}">
				<layoutData>
					<l:GridData span="XL4 L4 M12 S12" indentL="1"/>
				</layoutData>
			</Label>
			<ComboBox change="onChangeOfCategory" required = "{path: 'dispControlModel>/Categorisation', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/Categorisation', formatter: '.formatter.displayControlEnable'}" selectedKey="{FieldDataModel>/Categorisation}" items="{path: 'dropDown>/Categorisation'}">
										<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
				<layoutData>
					<l:GridData span="XL4 L7 M5 S12"/>
				</layoutData>
			</ComboBox>
			<Label text="{i18n>projIdText}">
				<layoutData>
					<l:GridData span="XL4 L4 M12 S12" indentL="1"/>
				</layoutData>
			</Label>
			<Input value ="{FieldDataModel>/FieldsDesc/ProjectDesc}" change="onWrongInput" liveChange="onKeyReset"  required = "{path: 'dispControlModel>/Project', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/Project', formatter: '.formatter.displayControlEnable'}" showValueHelp="true" valueHelpRequest="handleValueHelpProject">
				<customData>
					<core:CustomData key="{FieldDataModel>/Project}" value="Project"/>
				</customData>
				<layoutData>
					<l:GridData span="XL4 L7 M5 S12"/>
				</layoutData>
			</Input>
			<core:Title/>
			<Label text="{i18n>startDateText}">
				<layoutData>
					<l:GridData span="XL4 L4 M5 S12"/>
				</layoutData>
			</Label>
			<DatePicker 	value="{FieldDataModel>/StartDate}" required = "{path: 'dispControlModel>/StartDate', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/StartDate', formatter: '.formatter.displayControlEnable'}" valueFormat="yyyy-MM-ddT00:00:00" displayFormat="dd.MM.yyyy" change = "handleStartDateChange"  >
				<customData>
					<core:CustomData value="{FieldDataModel>/StartDate}"/>
				</customData>
				<layoutData>
					<l:GridData span="XL4 L6 M5 S12"/>
				</layoutData>
			</DatePicker>
			<Label text="{i18n>endDateText}">
				<layoutData>
					<l:GridData span="XL4 L4 M5 S12"/>
				</layoutData>
			</Label>
			<DatePicker  value="{path: 'FieldDataModel>/EndDate', formatter: '.formatter.handleDateNull'}" required = "{path: 'dispControlModel>/EndDate', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/EndDate', formatter: '.formatter.displayControlEnable'}" valueFormat="yyyy-MM-ddT00:00:00" displayFormat="dd.MM.yyyy"   change="handleEndDateChange">
				<customData>
					<core:CustomData  value="{FieldDataModel>/EndDate}"/>
				</customData>
				<layoutData>
					<l:GridData span="XL4 L6 M5 S12"/>
				</layoutData>
			</DatePicker>
			<core:Title text=""/>
			<Label text="{i18n>raisedByTxt}">
				<layoutData>
					<l:GridData span="XL4 L4 M5 S12"/>
				</layoutData>
			</Label>
			<Input value="{FieldDataModel>/FieldsDesc/RaisedByDesc}"  enabled = "false">
				<layoutData>
					<l:GridData span="XL4 L7 M5 S12"/>
				</layoutData>
			</Input>
			<Label text="{i18n>compNameTxt}">
				<layoutData>
					<l:GridData span="XL4 L4 M5 S12"/>
				</layoutData>
			</Label>
			<Input value="{FieldDataModel>/CompartmentName}"  required = "{path: 'dispControlModel>/CompartmentName', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/CompartmentName', formatter: '.formatter.displayControlEnable'}" change = "onChangeInfoUpdated" >
				<layoutData>
					<l:GridData span="XL4 L7 M5 S12"/>
				</layoutData>
			</Input>
			<Label text="{i18n>facFlocText}">
				<layoutData>
					<l:GridData span="XL4 L4 M5 S12"/>
				</layoutData>
			</Label>
			<Input value ="{FieldDataModel>/FieldsDesc/FlocDesc}" change="onWrongInput" liveChange="onKeyReset"  required = "{path: 'dispControlModel>/FacFloc', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/FacFloc', formatter: '.formatter.displayControlEnable'}" showValueHelp="true" valueHelpRequest="handleValueHelpFloc">
						<customData>
							<core:CustomData key="{FieldDataModel>/FacFloc}" value="floc"/>
						</customData>
				<layoutData>
					<l:GridData span="XL4 L7 M5 S12"/>
				</layoutData>
			</Input>
		</f:content>
	</f:SimpleForm>
	<f:SimpleForm editable="true" layout="ResponsiveGridLayout" labelSpanXL="4" labelSpanL="3" labelSpanM="7" labelSpanS="12"
		adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="2" columnsL="2" columnsM="2"
		singleContainerFullSize="true">
		<f:content>
			<CheckBox class="sapUiSmallMarginBegin" text="{i18n>newProjText}" enabled = "false" selected="{= ${FieldDataModel>/NewProject} === 'X' ? 'true' : 'false'}">
				<layoutData>
					<l:GridData span="XL4 L12 M12 S12" indentL="3" linebreak="true"/>
				</layoutData>
			</CheckBox>
			<Label class="sapUiTinyMarginBegin" text="{i18n>crTitleTxt}"></Label>
			<Input value="{FieldDataModel>/CrTitle}" required = "{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlEnable'}" class="sapUiSmallMarginBegin" width="215px"  change = "onChangeInfoUpdated">
				<layoutData>
					<l:GridData span="XL4 L7 M5 S12"/>
				</layoutData>
			</Input>
			<Label class="sapUiTinyMarginBegin" text="{i18n>pjtManager}"/>
			<Input value ="{FieldDataModel>/FieldsDesc/ProjManagerDesc}" change="onWrongInput" liveChange="onKeyReset" required = "{path: 'dispControlModel>/ProjectManager', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/ProjectManager', formatter: '.formatter.displayControlEnable'}" class="sapUiSmallMarginBegin" width="215px" showValueHelp="true" valueHelpRequest="handleValueHelpPrjMng" >
						<customData>
							<core:CustomData key="{FieldDataModel>/ProjectManager}" value="projectManager"/>
						</customData>
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label class="sapUiTinyMarginBegin" text="{i18n>NotifText}"/>
			<Input class="sapUiSmallMarginBegin" change="onWrongInput" liveChange="onKeyReset" required = "{path: 'dispControlModel>/PlanningNotification', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/PlanningNotification', formatter: '.formatter.displayControlEnable'}" value ="{FieldDataModel>/FieldsDesc/PlanNotifDesc}" width="215px" showValueHelp="true" valueHelpRequest="handleValueHelpPlnNotif" >
						<customData>
							<core:CustomData key="{FieldDataModel>/PlanningNotification}" value="PlanningNotification"/>
						</customData>
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label class="sapUiTinyMarginBegin" text="{i18n>tafRqd}"/>
				<ComboBox class="sapUiSmallMarginBegin"  change="setNull" required = "{path: 'dispControlModel>/TafRequired', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/TafRequired', formatter: '.formatter.displayControlEnable'}" width="215px" selectedKey="{FieldDataModel>/TafRequired}" items="{path: 'dropDown>/TAF'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</ComboBox>
			<Label class="sapUiTinyMarginBegin" text="{i18n>prtyTxt}"/>
				<Input value ="{FieldDataModel>/FieldsDesc/PriorityDesc}" change="onWrongInput" liveChange="onKeyReset"  required = "{path: 'dispControlModel>/Priority', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/Priority', formatter: '.formatter.displayControlEnable'}" class="sapUiSmallMarginBegin" width="215px" showValueHelp="true" valueHelpRequest="handleValueHelpPriorityF">
						<customData>
							<core:CustomData key="{FieldDataModel>/Priority}" value="fleetPriority"/>
						</customData>
			
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label class="sapUiTinyMarginBegin" text="{i18n>uniqNotxt}"/>
			<Input value="{FieldDataModel>/TaskNumber}"  required = "{path: 'dispControlModel>/TaskNumber', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/TaskNumber', formatter: '.formatter.displayControlEnable'}" class="sapUiSmallMarginBegin" width="215px"  change = "onChangeInfoUpdated">
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label class="sapUiTinyMarginBegin" text="{i18n>accLevelTxt}"/>
			<ComboBox class="sapUiSmallMarginBegin" width="215px" change="setNull" required = "{path: 'dispControlModel>/AcceptanceLevel', formatter: '.formatter.displayControlRequired'}"  enabled = "{path: 'dispControlModel>/AcceptanceLevel', formatter: '.formatter.displayControlEnable'}" selectedKey="{FieldDataModel>/AcceptanceLevel}" items="{path: 'dropDown>/Acceptance'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</ComboBox>
			<Label class="sapUiTinyMarginBegin fontsize" text="{i18n>enhanceFitTxt}"/>
				<ComboBox class="sapUiSmallMarginBegin" change="setNull" width="215px" required = "{path: 'dispControlModel>/EnhancementFitType', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/EnhancementFitType', formatter: '.formatter.displayControlEnable'}" selectedKey="{FieldDataModel>/EnhancementFitType}" items="{path: 'dropDown>/Enhancement'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</ComboBox>
			<Label class="sapUiTinyMarginBegin" text="{i18n>spclToolTxt}"/>
			<Input  class="sapUiSmallMarginBegin" width="215px" required = "{path: 'dispControlModel>/SpecialistTooling', formatter: '.formatter.displayControlRequired'}"  enabled = "{path: 'dispControlModel>/SpecialistTooling', formatter: '.formatter.displayControlEnable'}" value="{FieldDataModel>/SpecialistTooling}"  change = "onChangeInfoUpdated">
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label class="sapUiTinyMarginBegin" text="{i18n>tstPressTxt}"/>
			<Input value="{FieldDataModel>/TestPressures}" required = "{path: 'dispControlModel>/TestPressures', formatter: '.formatter.displayControlRequired'}"  enabled = "{path: 'dispControlModel>/TestPressures', formatter: '.formatter.displayControlEnable'}" class="sapUiSmallMarginBegin" width="215px"  change = "onChangeInfoUpdated">
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label class="sapUiTinyMarginBegin" text="{i18n>apprTempTxt}"/>
			<ComboBox width = "95%" class="sapUiSmallMarginBegin" required = "{path: 'dispControlModel>/ApprovalTemplate', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/ApprovalTemplate', formatter: '.formatter.displayControlEnable'}" change="setNull" selectedKey="{FieldDataModel>/ApprovalTemplate}" items="{path: 'dropDown>/ApprovalTemplate'}">
					<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
				<layoutData>
					<l:GridData span="XL4 L9 M5 S12"/>
				</layoutData>
			</ComboBox>
			<core:Title/>
			<Label text="{i18n>descText}"></Label>
			<TextArea value="{FieldDataModel>/Description}" required = "{path: 'dispControlModel>/Description', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/Description', formatter: '.formatter.displayControlEnable'}" rows="4" width="395px"  change = "onChangeInfoUpdated">
				<layoutData>
					<l:GridData span="XL4 L9 M5 S12"/>
				</layoutData>
			</TextArea>
			<Label text="{i18n>pgmMangeTxt}">
				<layoutData>
					<l:GridData indentL="4"/>
				</layoutData>
			</Label>
			<Input  value ="{FieldDataModel>/FieldsDesc/ProgManagerDesc}" change="onWrongInput" liveChange="onKeyReset" required = "{path: 'dispControlModel>/ProgrammeManager', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/ProgrammeManager', formatter: '.formatter.displayControlEnable'}" width="205px" showValueHelp="true" valueHelpRequest="handleValueHelpProgMng">
						<customData>
							<core:CustomData key="{FieldDataModel>/ProgrammeManager}" value="programManager"/>
						</customData>
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label text="{i18n>comInputTxt}">
				<layoutData>
					<l:GridData indentL="4"/>
				</layoutData>
			</Label>
			<ComboBox width="205px" change="setNull" selectedKey="{FieldDataModel>/ComInput}" required = "{path: 'dispControlModel>/ComInput', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/ComInput', formatter: '.formatter.displayControlEnable'}" items="{path: 'dropDown>/COM'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
		
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</ComboBox>
			<Label text="{i18n>comPocTxt}">
				<layoutData>
					<l:GridData indentL="4"/>
				</layoutData>
			</Label>
			<Input width="205px" value="{FieldDataModel>/ComSspoc}" required = "{path: 'dispControlModel>/ComSspoc', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/ComSspoc', formatter: '.formatter.displayControlEnable'}"  change = "onChangeInfoUpdated">
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label text="{i18n>ctrNoTxt}">
				<layoutData>
					<l:GridData indentL="4"/>
				</layoutData>
			</Label>
			<Input value="{FieldDataModel>/CtrNumber}" width="205px" required = "{path: 'dispControlModel>/CtrNumber', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/CtrNumber', formatter: '.formatter.displayControlEnable'}"  change = "onChangeInfoUpdated">
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</Input>
			<Label text="{i18n>storeProviderTxt}">
				<layoutData>
					<l:GridData indentL="4"/>
				</layoutData>
			</Label>
			<ComboBox width="205px" change="setNull" selectedKey="{FieldDataModel>/StoresProvider}" items="{path: 'dropDown>/Stores'}" required = "{path: 'dispControlModel>/Stores', formatter: '.formatter.displayControlRequired'}" enabled = "{path: 'dispControlModel>/Stores', formatter: '.formatter.displayControlEnable'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"   />
			
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</ComboBox>
			<Label text="{i18n>ITARctlLevel}">
				<layoutData>
					<l:GridData indentL="4"/>
				</layoutData>
			</Label>
				<ComboBox width="205px" change="setNull" selectedKey="{FieldDataModel>/ItarControlLevel}" required = "{path: 'dispControlModel>/Itar', formatter: '.formatter.displayControlRequired'}" items="{path: 'dropDown>/Itar'}" enabled = "{path: 'dispControlModel>/Itar', formatter: '.formatter.displayControlEnable'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"  />
				<layoutData>
					<l:GridData span="XL4 L5 M5 S12"/>
				</layoutData>
			</ComboBox>
		</f:content>
	</f:SimpleForm>
	<!--<HBox>
		<Label text="Description:" class="marginBegin"></Label>
		<Text class="sapUiSmallMarginBegin" maxLines="3"
			text="Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber Street HouseNumber"
			width="29rem"></Text>
	</HBox>-->
	<l:Grid class="sapUiMediumMarginTop" vSpacing="1" defaultSpan="L4 M6 S10">
		<Label text="{i18n>hsIssueTxt}">
			<layoutData>
				<l:GridData span="XL10 L10 M12 S12" indentL="2"/>
			</layoutData>
		</Label>
		<CheckBox text="{i18n>shipHzdTxt}" id = "fleetShip" selected="{= ${FieldDataModel>/ShipHazard} === 'X' ? true : false}" select = "onSelectHealthSafetyCbox">
			<layoutData>
				<l:GridData span="XL3 L3 M12 S12" indentL="2"/>
			</layoutData>
		</CheckBox>
		<CheckBox text="{i18n>confinedTxt}" id = "fleetSpace" selected="{= ${FieldDataModel>/ConfinedSpace} === 'X' ? true : false}" select = "onSelectHealthSafetyCbox">
			<layoutData>
				<l:GridData span="XL3 L3 M12 S12"/>
			</layoutData>
		</CheckBox>
		<CheckBox text="{i18n>asbestosTxt}" id = "fleetAsbestos" selected="{= ${FieldDataModel>/Asbestos} === 'X' ? true : false}" select = "onSelectHealthSafetyCbox">
			<layoutData>
				<l:GridData span="XL3 L3 M12 S12"/>
			</layoutData>
		</CheckBox>
	</l:Grid>
	</VBox>
</core:FragmentDefinition>