<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:f="sap.ui.layout.form" xmlns:l="sap.ui.layout">
	<VBox>
		<f:SimpleForm editable="true" layout="ResponsiveGridLayout" title="CR N." labelSpanXL="4" labelSpanL="4" labelSpanM="7" labelSpanS="12"
			adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="3" columnsL="3" columnsM="3"
			singleContainerFullSize="false">
			<f:content>
				<CheckBox text="{i18n>fleetTxt}" enabled="false" selected="true">
					<layoutData>
						<l:GridData span="XL4 L4 M12 S12" indentL="5"/>
					</layoutData>
				</CheckBox>
				<Label text="{i18n>subTypeText}">
					<layoutData>
						<l:GridData span="XL4 L4 M12 S12" indentL="1"/>
					</layoutData>
				</Label>
				<ComboBox change="setNull" required="{path: 'dispControlModel>/SubType', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/SubType', formatter: '.formatter.displayControlEnable'}" selectedKey="{FieldDataModel>/SubType}"
					items="{path: 'dropDown>/SubType'}">
					<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</ComboBox>
				<Label text="{i18n>categoryText}">
					<layoutData>
						<l:GridData span="XL4 L4 M12 S12" indentL="1"/>
					</layoutData>
				</Label>
				<ComboBox change="onChangeOfCategory" required="{path: 'dispControlModel>/Categorisation', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/Categorisation', formatter: '.formatter.displayControlEnable'}"
					selectedKey="{FieldDataModel>/Categorisation}" items="{path: 'dropDown>/Categorisation'}">
					<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</ComboBox>
				<Label text="{i18n>classPlatformText}">
					<layoutData>
						<l:GridData span="XL4 L4 M12 S12" indentL="1"/>
					</layoutData>
				</Label>
				<Input width="220px" value="{FieldDataModel>/Class}"
						enabled="{path: 'dispControlModel>/Class', formatter: '.formatter.displayControlEnable'}" change="onChangeInfoUpdated"
						>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>
					<!--<customData>
						<core:CustomData key="{FieldDataModel>/Class}" value="Project"/>
					</customData>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>-->
				<core:Title/>
				<Label text="{i18n>startDateText}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
				<DatePicker value="{FieldDataModel>/StartDate}"
					required="{path: 'dispControlModel>/StartDate', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/StartDate', formatter: '.formatter.displayControlEnable'}" valueFormat="yyyy-MM-ddT00:00:00"
					displayFormat="dd.MM.yyyy" change="handleStartDateChange">
					<customData>
						<core:CustomData value="{FieldDataModel>/StartDate}"/>
					</customData>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</DatePicker>
				<Label text="{i18n>endDateText}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
				<DatePicker value="{path: 'FieldDataModel>/EndDate', formatter: '.formatter.handleDateNull'}"
					required="{path: 'dispControlModel>/EndDate', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/EndDate', formatter: '.formatter.displayControlEnable'}" valueFormat="yyyy-MM-ddT00:00:00"
					displayFormat="dd.MM.yyyy" change="handleEndDateChange">
					<customData>
						<core:CustomData value="{FieldDataModel>/EndDate}"/>
					</customData>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</DatePicker>
				<Label text="{i18n>finishDateTxt}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
				<DatePicker value="{path: 'FieldDataModel>/TargetFinishDate', formatter: '.formatter.handleDateNull'}"
					required="{path: 'dispControlModel>/TargetFinishDate', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/TargetFinishDate', formatter: '.formatter.displayControlEnable'}" valueFormat="yyyy-MM-ddT00:00:00"
					displayFormat="dd.MM.yyyy" change="handleFinishDateChange">
					<customData>
						<core:CustomData value="{FieldDataModel>/TargetFinishDate}"/>
					</customData>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</DatePicker>
				<core:Title text=""/>
				<Label text="{i18n>raisedByTxt}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
				<Input value="{FieldDataModel>/FieldsDesc/RaisedByDesc}" enabled="false">
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>
				<Label text="{i18n>prtyTxt}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
				<Input value="{FieldDataModel>/FieldsDesc/PriorityDesc}" change="onWrongInput" liveChange="onKeyReset"
					required="{path: 'dispControlModel>/Priority', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/Priority', formatter: '.formatter.displayControlEnable'}" showValueHelp="true"
					valueHelpRequest="handleValueHelpPriorityF">
					<customData>
						<core:CustomData key="{FieldDataModel>/Priority}" value="fleetPriority"/>
					</customData>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>
				<Label text="{i18n>taskNumberTxt}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
				<Input value="{FieldDataModel>/TaskNumber}"
					required="{path: 'dispControlModel>/TaskNumber', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/TaskNumber', formatter: '.formatter.displayControlEnable'}" change="onChangeInfoUpdated">
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>
			</f:content>
		</f:SimpleForm>
		<f:SimpleForm editable="true" layout="ResponsiveGridLayout" labelSpanXL="4" labelSpanL="4" labelSpanM="7" labelSpanS="12"
			adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="3" columnsL="3" columnsM="3"
			singleContainerFullSize="false">
			<f:content>
				<CheckBox class="sapUiSmallMarginBegin" text="{i18n>newProjText}" enabled="false"
					selected="{= ${FieldDataModel>/NewProject} === 'X' ? 'true' : 'false'}">
					<layoutData>
						<l:GridData span="XL4 L12 M12 S12" indentL="3" linebreak="true"/>
					</layoutData>
				</CheckBox>
				<Label class="sapUiTinyMarginBegin" text="{i18n>customerTxt}">
					<layoutData>
						<l:GridData span="XL4 L4 M12 S12" indentL="1"/>
					</layoutData>
				</Label>
				<Input value="{FieldDataModel>/CustomerPO}" required = "{path: 'dispControlModel>/CustomerPO', formatter: '.formatter.displayControlRequired'}"  enabled = "{path: 'dispControlModel>/CustomerPO', formatter: '.formatter.displayControlEnable'}" change = "onChangeInfoUpdated">
				<!--<Input value="{FieldDataModel>/CrTitle}" required="{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlEnable'}" change="onChangeInfoUpdated">-->
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>
				<core:Title/>
				<Label class="sapUiTinyMarginBegin" text="{i18n>taskLeadTxt}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
					<Input value="{FieldDataModel>/FieldsDesc/TaskLeadDesc}" change="onWrongInput" liveChange="onKeyReset"
					required="{path: 'dispControlModel>/TaskLead', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/TaskLead', formatter: '.formatter.displayControlEnable'}" showValueHelp="true"
					valueHelpRequest="handleValueHelpPrjMng">
					<customData>
						<core:CustomData key="{FieldDataModel>/TaskLead}" value="TaskLead"/>
					</customData>
				<!--<Input value="{FieldDataModel>/CrTitle}" required="{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlEnable'}" change="onChangeInfoUpdated">-->
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>
				<core:Title/>
				<Label class="sapUiTinyMarginBegin" text="{i18n>pjtManager}">
					<layoutData>
						<l:GridData span="XL4 L4 M5 S12"/>
					</layoutData>
				</Label>
				<Input value="{FieldDataModel>/FieldsDesc/ProjManagerDesc}" change="onWrongInput" liveChange="onKeyReset"
					required="{path: 'dispControlModel>/ProjectManager', formatter: '.formatter.displayControlRequired'}"
					enabled="{path: 'dispControlModel>/ProjectManager', formatter: '.formatter.displayControlEnable'}" showValueHelp="true"
					valueHelpRequest="handleValueHelpPrjMng">
					<customData>
						<core:CustomData key="{FieldDataModel>/ProjectManager}" value="projectManager"/>
					</customData>
					<layoutData>
						<l:GridData span="XL4 L7 M5 S12"/>
					</layoutData>
				</Input>
			</f:content>
		</f:SimpleForm>
		<l:Grid defaultSpan="L4 M6 S10">
			<VBox>
				<HBox justifyContent="End" alignItems="Center">
					<Label width="100%" required="{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlRequired'}" class="floatNestRight" text="{i18n>crTitleTxt}:"></Label>
					<Input width="220px" value="{FieldDataModel>/CrTitle}"
						enabled="{path: 'dispControlModel>/CrTitle', formatter: '.formatter.displayControlEnable'}" change="onChangeInfoUpdated"
						class="sapUiTinyMarginBegin"></Input>
				</HBox>
				<HBox justifyContent="End" alignItems="Center">
					<Label width="100%" class="floatNestRight" text="{i18n>ITARctlLevel}:"></Label>
					<ComboBox width="220px" change="setNull" class="sapUiTinyMarginBegin sapUiTinyMarginTop floatRight"
						selectedKey="{FieldDataModel>/ItarControlLevel}" required="{path: 'dispControlModel>/ItarControlLevel', formatter: '.formatter.displayControlRequired'}"
						items="{path: 'dropDown>/Itar'}" enabled="{path: 'dispControlModel>/ItarControlLevel', formatter: '.formatter.displayControlEnable'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
					</ComboBox>
				</HBox>
			</VBox>
			<VBox>
				<HBox justifyContent="Start" alignItems="Center" class="sapUiLargeMarginBegin">
					<Label text="{i18n>descText}"></Label>
					<TextArea width="38rem" class="sapUiSmallMarginBegin" value="{FieldDataModel>/Description}"
						required="{path: 'dispControlModel>/Description', formatter: '.formatter.displayControlRequired'}"
						enabled="{path: 'dispControlModel>/Description', formatter: '.formatter.displayControlEnable'}" rows="4" change="onChangeInfoUpdated"></TextArea>
				</HBox>
				<HBox justifyContent="Start" alignItems="Center">
					<Label class="sapUiTinyMarginBegin" text="{i18n>apprTempTxt}:"/>
					<ComboBox width="38rem" class="sapUiTinyMarginBegin"
						required="{path: 'dispControlModel>/ApprovalTemplate', formatter: '.formatter.displayControlRequired'}"
						enabled="{path: 'dispControlModel>/ApprovalTemplate', formatter: '.formatter.displayControlEnable'}" change="setNull"
						selectedKey="{FieldDataModel>/ApprovalTemplate}" items="{path: 'dropDown>/ApprovalTemplate'}">
						<core:Item key="{dropDown>Value}" text="{dropDown>Description}"/>
					</ComboBox>
				</HBox>
				<layoutData>
					<l:GridData span="XL4 L8 M5 S12"/>
				</layoutData>
			</VBox>
		</l:Grid>
		<l:Grid class="sapUiMediumMarginTop" vSpacing="1" defaultSpan="L4 M6 S10">
			<Label text="{i18n>workStatusTxt}" class="sapUiLargeMarginBegin">
				<layoutData>
					<l:GridData span="XL10 L10 M12 S12" indentL="5"/>
				</layoutData>
			</Label>
			<CheckBox text="{i18n>ntStartedTxt}" selected="{= ${FieldDataModel>/NotStarted} === 'X' ? true : false}" select="onSelectHealthSafetyCbox"
				class="sapUiLargeMarginBegin">
				<layoutData>
					<l:GridData span="XL3 L2 M12 S12" indentL="5"/>
				</layoutData>
			</CheckBox>
			<CheckBox text="{i18n>startedTxt}" selected="{= ${FieldDataModel>/Started} === 'X' ? true : false}" select="onSelectHealthSafetyCbox">
				<layoutData>
					<l:GridData span="XL3 L2 M12 S12"/>
				</layoutData>
			</CheckBox>
			<CheckBox text="{i18n>completeTxt}" selected="{= ${FieldDataModel>/Complete} === 'X' ? true : false}" select="onSelectHealthSafetyCbox">
				<layoutData>
					<l:GridData span="XL3 L2 M12 S12"/>
				</layoutData>
			</CheckBox>
		</l:Grid>
	</VBox>
</core:FragmentDefinition>